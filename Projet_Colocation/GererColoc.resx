<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAANt5DBXXdxH/13cR/9d3Ef/XdxH/2XMNFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA1ngTRNd3Ef/XdxH/13cR/9d3Ef/ZdxE8AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADVgBUMAAAAAAAAAAAAAAAAAAAAAAAAAADXdxJy13cR/9d3Ef/XdxH/13cR/9d3EmUAAAAAAAAAAAAA
        AAAAAAAAAAAAANl7ExsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA2HkRO9d3Ee7XeBKA/1UAAwAAAAAAAAAAAAAAANd3Ep/XdxH/13cR/9d3Ef/XdxH/13cQjQAA
        AAAAAAAAAAAAANuAEg7WdxGj13cR9dh2EEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAANZ3ED7XdxH013cR/9d3Ef/XdxG+23YSHAAAAADXeA8z13cR3td3Ef/XdxH/13cR/9d3
        Ef/XdxLa13gSU79/AATWdhI413cR3td3Ef/XdxH/13cR9NZ3ED4AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADZexMb13cR9Nd3Ef/XdxH/13cR/9d3Ef/XdxHs13YRxtd3Ef/XdxH/13cR/9d3
        Ef/XdxH/13cR/9d3Ef/XdxH/13cR3td3EfvXdxH/13cR/9d3Ef/XdxH/2HcR79WAFQwAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADXdxGl13cR/9d3Ef/XdxH/13cR/9d3Ef/XdxH/13cR/9d3
        Ef/XdxH/13cR/9d3Ef/XdxH/13cR/9d3Ef/XdxH/13cR/9d3Ef/XdxH/13cR/9d3Ef/XdxF6AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAN13EQ/XdxHe13cR/9d3Ef/XdxH/13cR/9d3
        Ef/XdxH/13cR/9d3Ef/XdxH/13cR/9d3Ef/XdxH/13cR/9d3Ef/XdxH/13cR/9d3Ef/XdxH/13cRwf9V
        AAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANl4EzXXdxH613cR/9d3
        Ef/XdxH/13cR/9d3Ef/XdxH/13cR/9d3Ef/XdxH/13cR/9d3Ef/XdxH/13cR/9d3Ef/XdxH/13cR/9d3
        Ee7VdxEeAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAv38ABNd3
        Ed7XdxH/13cR/9d3Ef/XdxH/13cR/9d3Ef/XdxH/13cR/9d3Ef/XdxH/13cR/9d3Ef/XdxH/13cR/9d3
        Ef/XdxH/13YRxgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADYdhJU13cR/9d3Ef/XdxH/13cR/9d3Ef/XdxH/13cR5Nh3ElbbgBIO24ASDth2ElTXdxHb13cR/9d3
        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
        CB/8OBw//vgff//4H///+B////////////8=
</value>
  </data>
</root>